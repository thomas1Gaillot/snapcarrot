generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  name    String?
  Contest Contest[]
  Photo   Photo[]
}

model Contest {
  id          Int       @id @default(autoincrement())
  accessCode  String    @unique
  title       String
  description String
  theme       Theme[] // In PostgreSQL, this will be stored as a text array
  winner      String?
  status      Status
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  endDate     DateTime?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  photo       Photo[]
}

enum Status {
  open
  voting
  result
}

model Theme {
  id        Int      @id @default(autoincrement())
  name      String
  icon      String
  Contest   Contest? @relation(fields: [contestId], references: [id])
  contestId Int?
  photo     Photo[]
}

model Photo {
  id        Int     @id @default(autoincrement())
  url       String
  themeId   Int
  userId    Int
  contestId Int
  user      User    @relation(fields: [userId], references: [id])
  theme     Theme   @relation(fields: [themeId], references: [id])
  contest   Contest @relation(fields: [contestId], references: [id])

  @@unique([userId, themeId, contestId])
}
